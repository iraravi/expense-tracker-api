name: Build, Push, and Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 3: Make Gradle Wrapper Executable
      - name: Make Gradle Wrapper Executable
        run: chmod +x ./gradlew

      # Step 4: Build the application
      - name: Build application
        run: ./gradlew clean build -x test

      # Step 5: Log in to Docker registry
      - name: Log in to Docker registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 6: Build Docker image
      - name: Build Docker image
        run: docker build -t raviira/expense-api:latest

      # Step 7: Push Docker image
      - name: Push Docker image
        run: docker push raviira/expense-api:latest
#
#      # Step 8: Deploy to EC2
#      - name: Deploy to EC2
#        run: |
#          mkdir -p ~/.ssh
#          echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 -d > ~/.ssh/id_rsa
#          chmod 600 ~/.ssh/id_rsa
#          ssh-keyscan -H 15.207.170.98 >> ~/.ssh/known_hosts
#          ssh -o StrictHostKeyChecking=no ubuntu@15.207.170.98 << 'EOF'
#            docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
#            docker pull raviira/kiring:latest
#            docker stop kiring || true
#            docker rm kiring || true
#            docker run --name kiring -d -p 8080:8080 raviira/kiring:latest
#          EOF
